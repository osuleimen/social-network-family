version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: social_network_postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-social_network}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    networks:
      - social_network_network

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    container_name: social_network_redis
    ports:
      - "6380:6379"
    networks:
      - social_network_network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: social_network_backend
    environment:
      - FLASK_ENV=${FLASK_ENV:-development}
      - DATABASE_URL=postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@postgres:5432/${POSTGRES_DB:-social_network}
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - SECRET_KEY=${SECRET_KEY:-dev-secret-key}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY:-dev-jwt-secret-key}
      - JWT_ACCESS_TOKEN_EXPIRES=${JWT_ACCESS_TOKEN_EXPIRES:-3600}
      - JWT_REFRESH_TOKEN_EXPIRES=${JWT_REFRESH_TOKEN_EXPIRES:-2592000}
      - MOBIZON_API_KEY=${MOBIZON_API_KEY:-7788b3700803c6a924862ad070d47013b403e20b}
    ports:
      - "5001:5000"
    depends_on:
      - postgres
      - redis
    networks:
      - social_network_network
    volumes:
      - ./backend:/app
    command: python run.py

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: social_network_frontend
    environment:
      - VITE_API_URL=${VITE_API_URL:-http://localhost:5001/api}
    ports:
      - "3001:80"
    depends_on:
      - backend
    networks:
      - social_network_network
    volumes:
      - ./frontend:/app
      - /app/node_modules

  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    container_name: social_network_nginx
    ports:
      - "8443:80"
    volumes:
      - ./nginx-simple.conf:/etc/nginx/nginx.conf
    depends_on:
      - backend
      - frontend
    networks:
      - social_network_network

volumes:
  postgres_data:

networks:
  social_network_network:
    driver: bridge
